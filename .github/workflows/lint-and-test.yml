name: Lint and Test

on:
  pull_request:
    branches: [main, master, develop]
  push:
    branches: [main, master, develop]

jobs:
  lint-python:
    name: Python Linting (Ruff)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: uv sync

      - name: Run Ruff format check
        run: uv run ruff format --check . --config pyproject.toml

      - name: Run Ruff linting
        run: uv run ruff check . --config pyproject.toml --exit-zero  # Warning only, don't block CI

  lint-frontend:
    name: Frontend Linting (ESLint)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint

  test-python:
    name: Python Smoke Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: uv sync

      - name: Run smoke tests
        run: uv run python tests/test_smoke.py

  test-frontend-build:
    name: Frontend Build Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Check frontend directory structure
        working-directory: frontend
        run: |
          echo "Checking frontend directory structure..."
          ls -la
          echo "Checking if src exists..."
          ls -la src/ || echo "src directory not found!"

      - name: Build frontend
        working-directory: frontend
        run: npm run build

  # Summary job that depends on all others
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [lint-python, lint-frontend, test-python, test-frontend-build]
    if: always()

    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.lint-python.result }}" != "success" ]] || \
             [[ "${{ needs.lint-frontend.result }}" != "success" ]] || \
             [[ "${{ needs.test-python.result }}" != "success" ]] || \
             [[ "${{ needs.test-frontend-build.result }}" != "success" ]]; then
            echo "❌ One or more CI jobs failed"
            exit 1
          fi
          echo "✅ All CI jobs passed successfully!"
